buildscript {
    ext.kotlin_version = '1.4.21' // Required for Kotlin integration
    ext.spring_boot_version = '2.3.5.RELEASE'

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" // Required for Kotlin integration
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
    }
}

plugins {
    id 'groovy'
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id "org.flywaydb.flyway" version "7.3.0"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.3.61"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.61"
}

apply plugin: 'kotlin' // Required for Kotlin integration
apply plugin: "kotlin-spring" // https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'
apply plugin: 'org.flywaydb.flyway'
apply from: 'flyway.gradle'

jar {
    baseName = 'gs-rest-service'
    version = '0.1.0'
}

repositories {
    jcenter()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.MappedSuperclass")
    annotation("javax.persistence.Embeddable")
}

ext {
    //  Root =====================================
    springdocVersion = "1.5.0"

    // Domain ====================================

    // Test	======================================
    spockVersion = "1.3-groovy-2.5"
    randomBeanVersion = "3.9.0"
}

dependencies {
    implementation (
            "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}",
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-data-jpa",
            "org.springframework.boot:spring-boot-starter-validation",
            "mysql:mysql-connector-java",
            "org.springdoc:springdoc-openapi-ui:${springdocVersion}"
    )

    testCompile(
            "org.springframework.boot:spring-boot-starter-test",
            "com.h2database:h2",
            "org.spockframework:spock-spring:${spockVersion}",
            "io.github.benas:random-beans-randomizers:${randomBeanVersion}"
    )
}